version: '3.5'
services:

  reels:
    build: .
    image: pegasuscontainerregistry.azurecr.io/reels
    restart: "no"
    command: bash -c "python manage.py migrate
                      && python manage.py collectstatic --noinput
                      && python manage.py shell --command=\"from reels.data import get_sql_handler; get_sql_handler().init_database()\"
                      && python manage.py runserver 0.0.0.0:80"
    env_file:
      - env.env
    ports:
      - "80:80"
    depends_on:
      - broker
      - db
    volumes:
      - media-data:/var/lib/media
    networks:
      - pegasus-net
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 4G

  worker:
    build: .
    image: pegasuscontainerregistry.azurecr.io/worker
    restart: "on-failure"
    env_file:
      - env.env
    command: celery -A pegasus worker -l info -P solo
    depends_on:
      - broker
    volumes:
      - media-data:/var/lib/media
    networks:
      - pegasus-net
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 8G

  flower:
    image: zoomeranalytics/flower:0.9.1-4.0.2
    restart: "no"
    command: flower --broker=amqp://${RABBITMQ_DEFAULT_USER}:${RABBITMQ_DEFAULT_PASS}@broker:5672/${RABBITMQ_DEFAULT_VHOST}
    env_file:
      - env.env
    ports:
      - "5555:5555"
    depends_on:
      - broker
      - worker
    networks:
      - pegasus-net
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: 0.1G

  broker:
    image: rabbitmq:3.8.9
    restart: "always"
    env_file:
      - env.env
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - pegasus-net
    deploy:
      resources:
        limits:
          cpus: '0.4'
          memory: 0.5G

  db:
    image: postgres
    restart: "no"
    env_file:
      - env.env
    volumes:
      - db-data:/var/lib/postgresql
    ports:
      - "5432:5432"
    networks:
      - pegasus-net
    deploy:
      resources:
        limits:
          cpus: '0.4'
          memory: 0.1G

  pgadmin:
    image: dpage/pgadmin4
    restart: "always"
    env_file:
      - env.env
    ports:
      - "8080:8080"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    links:
      - "db:pgsql-server"
    networks:
      - pegasus-net
    depends_on:
      - db
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: 0.1G

  mongo:
    image: mongo
    restart: "no"
    ports:
      - "27017:27017"
    env_file:
      - env.env
    volumes:
      - db-data:/var/lib/mongodb
    networks:
      - pegasus-net
    deploy:
      resources:
        limits:
          cpus: '0.4'
          memory: 0.1G

  mongo-express:
    image: mongo-express
    restart: "always"
    ports:
      - "8081:8081"
    env_file:
      - env.env
    volumes:
      - mongo-express-data:/var/lib/mongoexpress
    depends_on:
      - mongo
    networks:
      - pegasus-net
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: 0.1G